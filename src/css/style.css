@charset "UTF-8";
body {
  background-color: #EFEFEF;
  /* color: #B7B7B7; */
}

.topNavBar {
  padding: 20px 0px;
  position: fixed;
  width: 100%;
  transition: all 0.5s;
  color: #B7B7B7;
  /* border: 1px solid red; */
  /* top:0;
    left:0; */
}

.topNavBar.sticky {
  color: #3d4451;
  padding: 10px 0px;
  position: fixed;
  width: 100%;
  background: white;
  z-index: 1;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.25);
}

.topNavBar-inner {
  padding: 0px 16px;
}

.topNavBar .logo {
  font-family: 'Arial Black';
  font-size: 24px;
  text-decoration: none;
  padding-top: 3px;
  padding-bottom: 4px;
}

* {
  margin: 0px;
  padding: 0px;
}

[data-x].offset {
  transform: translateY(100px);
}

[data-x] {
  transform: translateY(0px);
  transition: all 0.5s;
}

.topNavBar a .rs {
  color: #E6686A;
}

.topNavBar a .card {
  color: #9A9DA2;
}

body div div nav {
  padding-top: 5px;
  float: right;
}

body nav ul {
  margin: 0px;
  padding: 0px;
  position: relative;
}

nav ul li a {
  position: relative;
}

li.active > a::after,
li.highlight > a::after {
  content: '';
  position: absolute;
  display: block;
  top: 100%;
  left: 0;
  width: 100%;
  height: 3px;
  background: #E06567;
  animation: meunSlide  0.3s;
}

/* li元素上面加这个active是为了代替a::hover */
@keyframes meunSlide {
  0% {
    /* transform:translateX(-100%);如果用transform是按照自身的宽度 */
    width: 0%;
  }
  100% {
    /* transform:translateX(0%);果用transform是按照自身的宽度  */
    width: 100%;
  }
}

.topNavBar .menu > ul > li {
  list-style: none;
  float: left;
  padding: auto;
  margin-left: 17px;
  margin-right: 17px;
  /* white-space:nowrap; */
  position: relative;
  /* 这里增加position: relative;是给.submenu绝对定位用的 */
}

.topNavBar nav ul li a {
  font-weight: bold;
  font-size: 12px;
  color: inherit;
  /* 修改为字体颜色为继承，继承上面的topNavBar和sticky或者topNavBar */
  padding: 5px;
  text-decoration: none;
  padding: 5px 0px;
  border-top: 3px solid transparent;
  border-bottom: 3px solid transparent;
  display: block;
}

.submenu {
  list-style: none;
  display: none;
  position: absolute;
  /* 这里增加position: absolute;是为了防止同级的兄弟元素宽度变化 */
  right: 0;
  top: 100%;
  /* display: block; */
  /* white-space:nowrap; */
  background: white;
  color: #3d4451;
  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5);
}

/* 要在ul元素上加position: absolute;,如果在ul里面的li元素上加position: absolute会导致挤成一坨 */
li.active > .submenu {
  list-style: none;
  display: block;
  animation: submenuSlide 0.3s;
}

/* li元素上面加这个active是为了显示出li.active的ul(.submenu)和li子元素 */
@keyframes submenuSlide {
  0% {
    /* transform:translateX(-50%); */
    margin-right: 100%;
  }
  100% {
    /* transform:translateX(0%); */
    margin-right: 0%;
  }
}

.submenu > li {
  white-space: nowrap;
  /* 这里的white-space:nowrap;是由于宽度不够不换行用的，在父元素submenu使用也可以达到效果 */
  padding: 5px 10px;
}

.banner {
  height: 515px;
  /* background-color: rgba(0 ,0 ,0 ,0.8 );直接这里来写覆盖的透明度没有效果，要在做一个div覆盖才有效果了 */
  background-size: cover;
  /*图片大小缩小到指定的515px像素大小*/
  background-position: center center;
  /*图片上下左右居中*/
}

.mask {
  height: 515px;
  background-color: rgba(0, 0, 0, 0.8);
  /*0.8是透明度*/
}

.userCard {
  max-width: 940px;
  margin-left: auto;
  margin-right: auto;
  box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.5);
  /* background-color: #FFFFFF; */
  margin-top: -340px;
  /*这里如果用transform: translateY(-340px);会导致下面的宽度高度不能自适应*/
}

.puctureAndText {
  background-color: #FFFFFF;
  padding: 50px;
}

.picture {
  float: left;
}

.text {
  float: left;
  margin-left: 65px;
  width: 470px;
  /* position: relative;  如果把position:relative放到这里就会到他的下面去*/
}

.welcome {
  color: #FFFFFF;
  background-color: #E6686A;
  padding: 4px 16px;
  display: inline-block;
  /*如果是display:block会影响整行，如果是inline-block只会影响输入字体部分*/
  position: relative;
  margin-bottom: 10px;
}

.triangle {
  border: 10px solid red;
  display: block;
  /*这里因为要分为两行，所以不能使用inline-block，要使用block*/
  /*  border: 15px solid red; */
  /* display: inline-block; */
  /* border-top: transparent; */
  /*     border-bottom: transparent; */
  /* border-right: transparent; */
  border-right: 10px solid green;
  border-left: 10px solid blue;
  border-bottom: 10px solid black;
  /* border-top: 15px solid #E6686A; */
  border-top: 10px solid #E6686A;
  border-left-color: transparent;
  border-right-color: transparent;
  border-bottom-color: transparent;
  border-left-width: 0px;
  position: absolute;
  left: 4px;
  /*这里不可以写padding-left: 0px;或者margin*/
  top: 100%;
}

h1 {
  margin-top: 18px;
}

hr {
  height: 0;
  border: none;
  /*必须写道bord-top前面才可以*/
  border-top: 1px solid #DEDEDE;
  margin: 20px 0px;
}

.text dt, .text dd {
  float: left;
  padding: 5px 0px;
}

.text dt {
  width: 30%;
  font-weight: bold;
}

.text dd {
  width: 70%;
  color: #9DA0A7;
}

.media {
  background-color: #E6686A;
  text-align: center;
  /* margin-bottom: 50px; */
}

footer.media a {
  padding: 5px 0px;
  margin: 16px;
  display: inline-block;
  border-radius: 50%;
  width: 40px;
  line-height: 30px;
}

footer.media a:hover {
  background: #CF5D5F;
}

.userCard svg {
  width: 30px;
  height: 30px;
  fill: white;
  /*svg语法的颜色是用fill*/
  vertical-align: top;
}

.button {
  border: 1px solid #CDCFD1;
  text-align: center;
  width: 205px;
  font-weight: bold;
  font-size: 14px;
  padding: 19px 0px;
  margin: 32px auto;
  display: block;
  /*这里也可以设置成inline-block使用内联元素的居中布置，方方老师的就是设置成incline-block，但是需要在父元素加上text-align:center;*/
  color: #3D4451;
  text-decoration: none;
  transition: box-shadow 0.3s;
  /*跟在button:hover里面直接写transition-duration: 0.3s效果一样*/
}

.button:hover {
  /* transition-duration: 0.3s; */
  box-shadow: 0px 4px 13px 0px rgba(0, 0, 0, 0.2);
}

.selfIntroduction {
  font-family: cursive;
  margin: auto;
  max-width: 940px;
  text-align: center;
  font-size: 21px;
  line-height: 1.8;
}

.skillT {
  margin-top: 60px;
  /*如果给的margin:auto,这里就不能设置margin-top*/
  max-width: 940px;
  margin-left: auto;
  margin-right: auto;
}

section h2 {
  color: #3D4451;
  text-align: center;
  font-size: 34px;
}

section .skills {
  /* width: 940px;
    margin: auto; */
  list-style: none;
  background: #FFFFFF;
  padding: 42px 50px 10px;
  margin-top: 30px;
  box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.5);
  /* max-width:940; */
}

section .skills li {
  float: left;
  width: 48%;
  /*可以通奇偶伪类（一个冒号是伪类，两个冒号是伪元素）
    使奇行靠左，偶行靠右就可以是中间隔开，左边两边保持不变。这样比一个个设置padding和margin要效率*/
  box-sizing: border-box;
  /*注意博客中描述加深印象*/
  /* padding-right: 10px;使用padding会使全部li元素右边多处10px. */
  overflow: hidden;
}

section .skills li:nth-child(even) {
  float: right;
}

/* section .skills li:nth-child(odd){
    padding-right: 10px; 
    通过此伪类使奇行右边缩近10px;
} */
.bar1 {
  /* border: 4px solid #E6686A; */
  /* width: 50%; */
  height: 5px;
  background: #FAE1E1;
  margin: 4px 0px 40px 0px;
  border-radius: 2px;
}

.skillT .bar2 {
  /* border: 1px solid red; */
  background: #E6686A;
  height: 100%;
  width: 40%;
  border-radius: 2px;
  transform: translateX(0);
  transition: all 1s;
}

.skillT.offset .bar2 {
  transform: translateX(-100%);
}

h3 {
  font-weight: normal;
  font-size: 14px;
}

.portfolio {
  text-align: center;
  /*如果使用了float:left或者right，想要居中需要在inline-block的父元素上增加text-alian:center和display:inline-block*/
  max-width: 940px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 60px;
  /* margin-bottom: 100px; */
}

.portfolio ol {
  list-style: none;
}

.portfolio nav {
  display: inline-block;
  margin-top: 32px;
}

.portfolio ol li {
  float: left;
  margin-left: 40px;
  cursor: pointer;
}

.portfolio ol li:first-child {
  margin-left: 0px;
}

/* 只控制第一个子元素的伪类 */
/* 删除了部分不老版本的代码，为了轮播的显示 */
section.portfolio .swiper-container {
  width: 668px;
  height: 501px;
  padding-bottom: 30px;
}

/* 调整布局及图片大小 */
section.portfolio .swiper-slide {
  background: white;
}

section.portfolio h2 {
  margin-bottom: 32px;
}

section.portfolio .swiper-button-prev {
  background-color: white;
  width: 44px;
  height: 44px;
  border-radius: 50%;
  top: 48%;
  position: absolute;
  left: 75px;
}

/*     <!-- 这里是为了让自己写的style.css覆盖swiper库里面的swiper-button-prev的部分内容 -->
 */
section.portfolio .swiper-button-next {
  background-color: white;
  width: 44px;
  height: 44px;
  border-radius: 50%;
  top: 48%;
  position: absolute;
  right: 75px;
}

/*     <!-- 这里是为了让自己写的style.css覆盖swiper库里面的swiper-button-next的部分内容,并且调整居中及移动到父元素外面来布局 -->
 */
.swiper-pagination-bullet {
  width: 20px;
  height: 20px;
  text-align: center;
  line-height: 20px;
  font-size: 12px;
  color: #000;
  opacity: 1;
  background: rgba(0, 0, 0, 0.2);
}

.swiper-pagination-bullet-active {
  color: #fff;
  background: #007aff;
}

/* 第几张图片的显示和可点击 */
/*这里设置bar条的时候如果是inline内联元素是不可以设置宽高，背景颜色完全由于内部文档流决定；
  如果是inline-block就可以设置宽高，但是如果不设置宽高也会按照内部文档流决定高宽；
  如果设置为block，有没有文档流，宽度都会占为一行，可以调整宽高。*/
/*如果inline-block作为父级包裹block，内部的block高度由于父级inline-block决定
  反过来的话，因为父级是block已经有高度了占一行。*/
/*如果有文字内容的前提下继续设置宽高，这样实际控制的宽高不是文字所占用的文档流本身，而是设置的宽高*/
.jobs {
  position: relative;
  height: 597px;
  /* 父级必须给高度，不然背景图片的高度不会按照告诉计 */
}

#postMessageForm {
  margin: 100px auto;
  width: 700px;
}

section ol#messageList {
  max-width: 700px;
  margin: 0 auto;
  list-style: none;
  background: #F5F5F5;
  border-top: 1px solid #CCC;
}

section ol#messageList li {
  padding: 16px;
  border-bottom: 1px solid #CCC;
}

/* 如果不用float也可以使用绝对定位来布局，在float中使用margin-top来控制顶部距离，在绝对定位中通过top来控制顶部距离； */
.clearfix::after {
  content: '';
  display: block;
  clear: both;
}
